#!/bin/bash

#####################################
# This script sets up your machine
# Permission set to user readable & executable
# by: chmod 775 ./setup_linux
# run by right-clicking it
#####################################


#####################################
# Preparing to run
#####################################
echo "

Detected Linux, running corresponding setup.
================================================
"


#####################################
# install all shits
#####################################
echo "
================================================

Setup ~/.bashrc

================================================
"
# setup bash profile first before being overridden
echo "
# git
alias gstat='git status'
alias gadd='git add -A; git commit -m'
alias gpush='git push'
alias gpull='git pull'
 
# activate tensorflow
alias activatetf='source ~/tensorflow/bin/activate'

# lazy-check your ip
alias myip='curl ipinfo.io'" > ~/.bashrc


# Update first before install
sudo apt-get update 
sudo apt-get install ruby


#####################################
# Add keys
#####################################
# Google-chrome
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
# ST3
sudo add-apt-repository ppa:webupd8team/sublime-text-3
# neo4j
sudo wget -O - https://debian.neo4j.org/neotechnology.gpg.key | sudo apt-key add -;
echo 'deb http://debian.neo4j.org/repo stable/' >/tmp/neo4j.list;
sudo mv /tmp/neo4j.list /etc/apt/sources.list.d;
# postgres 9.5
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -

# then update
sudo apt-get update


#####################################
# Install common apps
#####################################
sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev
sudo apt-get install git
sudo apt-get install google-chrome-stable
sudo apt-get install sublime-text-installer
sudo apt-get install screen

# install java
echo "
=> Ensuring you have JDK 1.7 to run neo4j"
java -version || sudo apt-get install default-jdk

# write JAVA_HOME path if not exists
if [ "$JAVA_HOME" == "" ]; 
	then jdkpath=$(readlink -f $(which java) | sed 's/\(.*\)\/bin\/java/\1/'); echo "
# For neo4j to use JVM
export JAVA_HOME=$jdkpath" >> ~/.bashrc;
fi



#####################################
# Install Python and pip apps
#####################################
sudo apt-get install python-pip python-dev build-essential
sudo pip install --upgrade pip
sudo pip install --upgrade setuptools
sudo pip install --upgrade virtualenv
# tensorflow
sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.6.0-cp27-none-linux_x86_64.whl



#####################################
# Install Node.js and npm apps
#####################################
curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo apt-get install npm
sudo ln -s /usr/bin/nodejs /usr/bin/node
sudo npm update npm -g
# gulp for streaming build, forever for keep-alive
sudo npm i -g gulp forever



#####################################
# Install Ruby on Rails with rbenv
#####################################
# install rbenv ruby-build
cd
git clone git://github.com/sstephenson/rbenv.git .rbenv
echo '
export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc

git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc

git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
source ~/.bashrc

rbenv install $(rbenv install -l | grep -v - | tail -1)
rbenv global $(rbenv install -l | grep -v - | tail -1)
gem install bundler
gem install rails
rbenv rehash

# install travis for encryption
gem install travis


#####################################
# Install Neo4j
#####################################
sudo apt-get install neo4j;
echo "
# neo4j {start | stop | status | info}
alias neo4j='service neo4j-service'

# Neo4j home path
export NEO4J_HOME=$(neo4j-shell -c 'dbinfo -g Kernel StoreDirectory' | grep -oE '\/.*lib.*?\/')" >> ~/.bashrc
source ~/.bashrc
# Install the shell tool for import export
curl -LOk http://dist.neo4j.org/jexp/shell/neo4j-shell-tools_2.2.zip && unzip neo4j-shell-tools_2.2.zip -d ${NEO4J_HOME}lib && rm neo4j-shell-tools_2.2.zip

#####################################
# Install Postgresql 9.5: 
#####################################
sudo apt-get install postgresql postgresql-contrib


#####################################
# Setup Amazon EC2 CLI
#####################################
curl -O http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip
sudo mkdir /usr/local/ec2
sudo unzip ec2-api-tools.zip -d /usr/local/ec2
export EC2_HOME=/usr/local/ec2/$(ls /usr/local/ec2)
export PATH=$PATH:$EC2_HOME/bin

# Then manually export your EC2 instance cred
# more ref here http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/set-up-ec2-cli-linux.html#setting_up_ec2_command_linux
# export AWS_ACCESS_KEY=your-aws-access-key-id 
# export AWS_SECRET_KEY=your-aws-secret-key


rm -rf mac_setup master.zip ec2-api-tools.zip


#####################################
# Set your swap file bigger
#####################################
swapoff -a
sudo dd if=/dev/zero of=/swapfile bs=1024 count=1024k
sudo mkswap /swapfile
sudo swapon /swapfile
swapon -s


echo "
================================================

Setup is done.
Restart your machine for changes to apply.

================================================
"


